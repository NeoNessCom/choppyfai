 || Todo lo usado durante la construcción del proyecto ||

- Levantar el servidor de prueba: crtl + shift + p => Abrirá las sugerencias de sudio code. Teclear [ Live Server: Open with Live Server ] y seleccionarlo. Esto pondrá en marcha el servidor de prueba a la escucha. 
NOTA: Para que jale con Firefox, primero hay que cerrar el navegador Firefox, ya que al levantar el servidor, éste se abre automáticamente.


- Font Awesome. Para poder usar font awesome, ya no se pudo hacer justo como indica Fazt en el tutorial. Ahora pide suscribirse y confirmar e-mail. Solamente de esta manera te brinda el CDN en tu cuenta de fontawesome. 





*** Se usa MEDIA QUERY para hacer RESPONSIVE la página.


*** Se usa ANIMATE.CSS para animar el titulo y el logo. Página: https://daneden.github.io/animate.css/


*** Se inicializa un repositorio de git dentro de la carpeta del proyecto:

Desde consola:

git init  /* Para inicializar el repo */
git status /* Para verificar que se ha inicializado (apareceran en rojo porque todavia no se agregan oficialmente)*/
git add . /* Para agregar todos los archivos de la carpeta a la repo */ 
git status /* Ahora aparecerán en verde, ya que ya están agregados */
git commit -m "primer-commit" /* Pone en punto todo el repo local, para que esté listo para subirse a github */
git remote add origin https://github.com/NeoNessCom/choppyfai.git /*Para agregar la dirección destino hacia la que se hará la subida */
git push -u origin master  /* Carga los archivos a la repo de git. Si aún no tenemos sesion abierta en la consola, tecleamos esto. Nos pedirá credenciales. */




*** Una vez hecho lo anterior, creamos una nueva branch en la página de git, de nombre "gh-pages".
En un branch tendrémos el código de la página, y en otro el código para poder verlo en un servidor. 
NOTA: Lo anterior ya no es necesario hacerlo en github, pero por si las dudas, se deja la nota.



*** Página para comprar el dominio: https://www.namecheap.com/
Nombre elegido para la repo en github: choppyfai
Seguir las instrucciones del video de Fazt para configurar el dominio en github





########################################################################################################################################################





|| CAMBIANDO IMAGENES png A svg ||

Nota: Asi estaba Antes el parrafo del carrito, que se cambió. En lugar de ir el tagg de <img>, iba este <i>...</i>, que hace referencia al CDN de Font Awesome.
Sus partes son: 'fas' es una etiqueta de Font Awesome. 'color_hipertexto' es una etiqueta mia. 'fa_shopping-cart' el nombre de la imagen que
hace referencia al CDN. 'fa-5x' idica el tamaño de la imagen:

<i class="fas color_hipertexto fa-shopping-cart fa-5x"></i>




Paso 1 - Taggear la imagen en donde queremos que vaya, de la misma manera en la que se taggean las imagenes normales:

<img src="">





Paso 2 - Declarar una clase para manipular algunas de sus propiedades desde CSS:

<img class="" src="">

Ejemplo de cómo quedaría el parrafo: [ img class="altercacion_de_iconos" src="img/shopping-cart-solid.svg"> ]





Paso 3 -  Definir en CSS la clase que le dimos al tagg. 

.altercacion_de_iconos
{
}





Paso 4 - Detallar dentro del bloque de la clase sus atributos. Uno de los cuales, definirá su color; esté es "filter":

.altercacion_de_iconos /* Una simple y facil forma de cambiar el color de las imagenes .svg */
{
width: 90px;
height: 80px;
filter: invert(100%) sepia(96%) saturate(19%) hue-rotate(236deg) brightness(104%) contrast(100%);
}


***NOTA: Hay que definir el color de filter en formato CSS. Para ello, podemos usar esta página para pasar colores de hexadecimal a CSS:

https://codepen.io/sosuke/pen/Pjoqqp

*Hasta abajo aparece el resultado.


########################################################################################################################################################








